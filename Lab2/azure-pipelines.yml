# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "40c13db7-4d9b-4f01-b014-7d9cce22f894"

  # Web app name
  webAppName: "SD-Web-Application"

  # Environment name
  environmentName: "SD-Web-Application"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "18.x"
            displayName: "Install Node.js"

          - script: |
              npm install
              npm run build --if-present
            displayName: "npm install and build"
            workingDirectory: "$(Build.SourcesDirectory)/Lab2/myExpressApp"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Test
    displayName: "Test"
    jobs:
      - job: RunTests
        steps:
          - script: rm -rf node_modules
              npm install
              npx jest
            displayName: "Run Tests"

  - stage: Deploy
    displayName: Deploy
    dependsOn: Test
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: "Azure Web App Deploy: SD-Web-Application"
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(webAppName)
                    runtimeStack: "NODE|18.x"
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: "npm start"
